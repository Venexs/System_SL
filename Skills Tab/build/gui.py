# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage
import csv
import subprocess
import subprocess
subprocess.Popen(['python', 'sfx.py'])
OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"assets\frame0")

def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


window = Tk()

window.geometry("555x957")
window.configure(bg = "#FFFFFF")

pv_sk1=pv_sk2=pv_sk3=pv_sk4='-'
pv_lv1=pv_lv2=pv_lv3=pv_lv4='-'
pv_d1=pv_d2=pv_d3=pv_d4=''

ac_sk1=ac_sk2=ac_sk3=ac_sk4='-'
ac_lv1=ac_lv2=ac_lv3=ac_lv4='-'
ac_d1=ac_d2=ac_d3=ac_d4=''

def skill_data(name,lvl,desc):
    if name!='-' and lvl!='-':
        fout=open('Files/Temp Files/Skill Temp.csv', 'w', newline='')
        fr=csv.writer(fout)
        rec=[name,lvl,desc]
        fr.writerow(rec)
        fout.close()

        subprocess.Popen(['python', 'Skill Info/build/gui.py'])

        window.quit()

with open('Files/Skills.csv', 'r') as fout:
    fr=csv.reader(fout)
    num=0
    for k in fr:
        try:
            if num==0 and k[2].upper()=='ACTIVE':
                ac_sk1=k[0]
                ac_lv1=k[1]
                ac_d1=k[3]
                num+=1
            elif num==1 and k[2].upper()=='ACTIVE':
                ac_sk2=k[0]
                ac_lv2=k[1]
                ac_d2=k[3]
                num+=1
            elif num==2 and k[2].upper()=='ACTIVE':
                ac_sk3=k[0]
                ac_lv3=k[1]
                ac_d3=k[3]
                num+=1
            elif num==3 and k[2].upper()=='ACTIVE':
                ac_sk4=k[0]
                ac_lv4=k[1]
                ac_d4=k[3]
                num+=1
        except:
            print()

with open('Files/Skills.csv', 'r') as fout:
    fr=csv.reader(fout)
    num=0
    for k in fr:
        try:
            if num==0 and k[2].upper()=='PASSIVE':
                pv_sk1=k[0]
                pv_lv1=k[1]
                pv_d1=k[3]
                num+=1
            elif num==1 and k[2].upper()=='PASSIVE':
                pv_sk2=k[0]
                pv_lv2=k[1]
                pv_d2=k[3]
                num+=1
            elif num==2 and k[2].upper()=='PASSIVE':
                pv_sk3=k[0]
                pv_lv3=k[1]
                pv_d3=k[3]
                num+=1
            elif num==3 and k[2].upper()=='PASSIVE':
                pv_sk4=k[0]
                pv_lv4=k[1]
                pv_d4=k[3]
                num+=1
        except:
            print()

canvas = Canvas(
    window,
    bg = "#FFFFFF",
    height = 957,
    width = 555,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)

canvas.place(x = 0, y = 0)
image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    277.0,
    478.0,
    image=image_image_1
)

canvas.create_rectangle(
    0.0,
    866.9999999999999,
    539.0,
    883.0,
    fill="#FFFFFF",
    outline="")

canvas.create_rectangle(
    0.0,
    87.0,
    520.9990367889404,
    103.98248827329371,
    fill="#FFFFFF",
    outline="")

image_image_2 = PhotoImage(
    file=relative_to_assets("image_2.png"))
image_2 = canvas.create_image(
    286.9999999999999,
    483.9999999999999,
    image=image_image_2
)

canvas.create_text(
    223.0,
    266.0,
    anchor="nw",
    text="[Passive Skills]",
    fill="#FFFFFF",
    font=("Inter", 18 * -1)
)

canvas.create_text(
    233.0,
    156.0,
    anchor="nw",
    text="SKILLS",
    fill="#FFFFFF",
    font=("Inter Medium", 32 * -1)
)

canvas.create_rectangle(
    218.0,
    188.0,
    352.0,
    191.00000003877767,
    fill="#FFFFFF",
    outline="")

canvas.create_rectangle(
    131.0,
    302.0,
    442.0,
    475.0,
    fill="#272727",
    outline="")

canvas.create_rectangle(
    148.0,
    310.0,
    425.0,
    340.0,
    fill="#FFFFFF",
    outline="")

canvas.create_rectangle(
    150.0,
    312.0,
    423.0,
    338.0,
    fill="#272727",
    outline="")

# ? =====================================================================
# ? Passive Skills
# ? =====================================================================

# ? =====================================================================

canvas.create_text(
    165.0,
    314.0,
    anchor="nw",
    text=pv_sk1,
    fill="#FFFFFF",
    font=("Inter", 18 * -1)
)

canvas.create_text(
    361.0,
    314.0,
    anchor="nw",
    text=f"Lvl.{pv_lv1}",
    fill="#FFFFFF",
    font=("Inter", 18 * -1)
)

canvas.create_rectangle(
    148.0,
    349.0,
    425.0,
    379.0,
    fill="#FFFFFF",
    outline="")

canvas.create_rectangle(
    150.0,
    351.0,
    423.0,
    377.0,
    fill="#272727",
    outline="")

# ? =====================================================================

canvas.create_text(
    165.0,
    353.0,
    anchor="nw",
    text=pv_sk2,
    fill="#FFFFFF",
    font=("Inter", 18 * -1)
)

canvas.create_text(
    361.0,
    353.0,
    anchor="nw",
    text=f"Lvl.{pv_lv2}",
    fill="#FFFFFF",
    font=("Inter", 18 * -1)
)

canvas.create_rectangle(
    148.0,
    388.0,
    425.0,
    418.0,
    fill="#FFFFFF",
    outline="")

canvas.create_rectangle(
    150.0,
    390.0,
    423.0,
    416.0,
    fill="#272727",
    outline="")

# ? =====================================================================

canvas.create_text(
    165.0,
    392.0,
    anchor="nw",
    text=pv_sk3,
    fill="#FFFFFF",
    font=("Inter", 18 * -1)
)

canvas.create_text(
    361.0,
    392.0,
    anchor="nw",
    text=f"Lvl.{pv_lv3}",
    fill="#FFFFFF",
    font=("Inter", 18 * -1)
)

canvas.create_rectangle(
    148.0,
    427.0,
    425.0,
    457.0,
    fill="#FFFFFF",
    outline="")

canvas.create_rectangle(
    150.0,
    429.0,
    423.0,
    455.0,
    fill="#272727",
    outline="")

# ? =====================================================================

canvas.create_text(
    165.0,
    431.0,
    anchor="nw",
    text=pv_sk4,
    fill="#FFFFFF",
    font=("Inter", 18 * -1)
)

canvas.create_text(
    361.0,
    431.0,
    anchor="nw",
    text=f"Lvl.{pv_lv4}",
    fill="#FFFFFF",
    font=("Inter", 18 * -1)
)

canvas.create_text(
    229.0,
    507.0,
    anchor="nw",
    text="[Active Skills]",
    fill="#FFFFFF",
    font=("Inter", 18 * -1)
)

canvas.create_rectangle(
    131.0,
    543.0,
    442.0,
    716.0,
    fill="#272727",
    outline="")

# ! =====================================================================

# ? =====================================================================
# ? Active Skills
# ? =====================================================================

# ? =====================================================================

canvas.create_rectangle(
    148.0,
    551.0,
    425.0,
    581.0,
    fill="#FFFFFF",
    outline="")

canvas.create_rectangle(
    150.0,
    553.0,
    423.0,
    579.0,
    fill="#272727",
    outline="")

canvas.create_text(
    165.0,
    555.0,
    anchor="nw",
    text=ac_sk1,
    fill="#FFFFFF",
    font=("Inter", 18 * -1)
)

canvas.create_text(
    361.0,
    555.0,
    anchor="nw",
    text=f"Lvl.{ac_lv1}",
    fill="#FFFFFF",
    font=("Inter", 18 * -1)
)

# ? =====================================================================

canvas.create_rectangle(
    148.0,
    590.0,
    425.0,
    620.0,
    fill="#FFFFFF",
    outline="")

canvas.create_rectangle(
    150.0,
    592.0,
    423.0,
    618.0,
    fill="#272727",
    outline="")

canvas.create_text(
    165.0,
    594.0,
    anchor="nw",
    text=ac_sk2,
    fill="#FFFFFF",
    font=("Inter", 18 * -1)
)

canvas.create_text(
    361.0,
    594.0,
    anchor="nw",
    text=f"Lvl.{ac_lv2}",
    fill="#FFFFFF",
    font=("Inter", 18 * -1)
)

# ? =====================================================================

canvas.create_rectangle(
    148.0,
    629.0,
    425.0,
    659.0,
    fill="#FFFFFF",
    outline="")

canvas.create_rectangle(
    150.0,
    631.0,
    423.0,
    657.0,
    fill="#272727",
    outline="")

canvas.create_text(
    165.0,
    633.0,
    anchor="nw",
    text=ac_sk3,
    fill="#FFFFFF",
    font=("Inter", 18 * -1)
)

canvas.create_text(
    361.0,
    633.0,
    anchor="nw",
    text=f"Lvl.{ac_lv3}",
    fill="#FFFFFF",
    font=("Inter", 18 * -1)
)

# ? =====================================================================

canvas.create_rectangle(
    148.0,
    668.0,
    425.0,
    698.0,
    fill="#FFFFFF",
    outline="")

canvas.create_rectangle(
    150.0,
    670.0,
    423.0,
    696.0,
    fill="#272727",
    outline="")

canvas.create_text(
    165.0,
    672.0,
    anchor="nw",
    text=ac_sk4,
    fill="#FFFFFF",
    font=("Inter", 18 * -1)
)

canvas.create_text(
    361.0,
    672.0,
    anchor="nw",
    text=f"Lvl.{ac_lv4}",
    fill="#FFFFFF",
    font=("Inter", 18 * -1)
)

# ? =====================================================================

button_image_1 = PhotoImage(
    file=relative_to_assets("button_1.png"))
button_1 = Button(
    image=button_image_1,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: skill_data(pv_sk1,pv_lv1,pv_d1),
    relief="flat"
)
button_1.place(
    x=443.0,
    y=313.0,
    width=24.0,
    height=24.0
)

button_image_2 = PhotoImage(
    file=relative_to_assets("button_2.png"))
button_2 = Button(
    image=button_image_2,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: skill_data(pv_sk2,pv_lv2,pv_d2),
    relief="flat"
)
button_2.place(
    x=443.0,
    y=352.0,
    width=24.0,
    height=24.0
)

button_image_3 = PhotoImage(
    file=relative_to_assets("button_3.png"))
button_3 = Button(
    image=button_image_3,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: skill_data(pv_sk3,pv_lv3,pv_d3),
    relief="flat"
)
button_3.place(
    x=443.0,
    y=391.0,
    width=24.0,
    height=24.0
)

button_image_4 = PhotoImage(
    file=relative_to_assets("button_4.png"))
button_4 = Button(
    image=button_image_4,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: skill_data(pv_sk4,pv_lv4,pv_d4),
    relief="flat"
)
button_4.place(
    x=443.0,
    y=430.0,
    width=24.0,
    height=24.0
)

# ? =====================================================================

button_image_5 = PhotoImage(
    file=relative_to_assets("button_5.png"))
button_5 = Button(
    image=button_image_5,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: skill_data(ac_sk1,ac_lv1,ac_d1),
    relief="flat"
)
button_5.place(
    x=443.0,
    y=554.0,
    width=24.0,
    height=24.0
)

button_image_6 = PhotoImage(
    file=relative_to_assets("button_6.png"))
button_6 = Button(
    image=button_image_6,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: skill_data(ac_sk2,ac_lv2,ac_d2),
    relief="flat"
)
button_6.place(
    x=443.0,
    y=593.0,
    width=24.0,
    height=24.0
)

button_image_7 = PhotoImage(
    file=relative_to_assets("button_7.png"))
button_7 = Button(
    image=button_image_7,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: skill_data(ac_sk3,ac_lv3,ac_d3),
    relief="flat"
)
button_7.place(
    x=443.0,
    y=632.0,
    width=24.0,
    height=24.0
)

button_image_8 = PhotoImage(
    file=relative_to_assets("button_8.png"))
button_8 = Button(
    image=button_image_8,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: skill_data(ac_sk4,ac_lv4,ac_d4),
    relief="flat"
)
button_8.place(
    x=443.0,
    y=671.0,
    width=24.0,
    height=24.0
)

window.resizable(False, False)
window.mainloop()
